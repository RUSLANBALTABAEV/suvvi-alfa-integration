import axios from "axios";
import dotenv from "dotenv";

dotenv.config();

const suvvi = axios.create({
  baseURL: process.env.SUVVI_API_URL,
  headers: { Authorization: `Bearer ${process.env.SUVVI_TOKEN}` },
});

export async function notifyAdmin(message) {
  try {
    const adminId = process.env.ADMIN_SUVVI_ID;

    if (!adminId) {
      console.warn("‚ö†Ô∏è ADMIN_SUVVI_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env");
      return;
    }

    await suvvi.post("/messages", {
      recipient_id: adminId,
      type: "text",
      text: `üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:\n\n${message}`,
    });

    console.log(`üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É`);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:", error.message);
  }
}

export async function sendDailySummary(summaryData) {
  const message = `
üìä –°–≤–æ–¥–∫–∞ –∑–∞ –¥–µ–Ω—å

üìù –ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫: ${summaryData.new_leads}
üí∞ –û–ø–ª–∞—Ç: ${summaryData.payments} (${summaryData.total_amount} —Å—É–º)
üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${summaryData.active_students}
üìö –û—Ç–∫—Ä—ã—Ç—ã—Ö –≥—Ä—É–ø–ø: ${summaryData.open_groups}
‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø: ${summaryData.full_groups}
  `.trim();

  await notifyAdmin(message);
}
